name: CodeQL Analysis and Docker Build

on:
  push:
    branches:
      - main

jobs:
  # pylint:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: ["3.8", "3.9", "3.10","3.12"]
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install pylint
  #   - name: Analysing the code with pylint
  #     run: |
  #       pylint app.py
        
  # docker-build:
  #   name: Docker Build and Push
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
        
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
      
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}        

  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: .
  #         file: Dockerfile
  #         push: true
  #         tags: docker.io/abdfahmia/flask-docker:latest

  deploy-to-kubernetes:
    runs-on: ubuntu-latest
    # needs: docker-build
    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_ACCESS_TOKEN }}
    
              
      - name: Update deployment file
        run: | 
          TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|abdfahmia/flask-docker:latest|' $GITHUB_WORKSPACE/deployment/deployment.yaml 
          'echo "$GITHUB_WORKSPACE" | base64'
          'echo "$GITHUB_SHA" | base64'
          
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 pokemon-api
      
      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/deployment/deployment.yaml
      
      - name: Verify deployment
        run: kubectl rollout status deployment pokemon-api
 
   
   
